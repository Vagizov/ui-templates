<?xml version="1.0" encoding="UTF-8"?>

<facelet-taglib version="2.0"
        xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd">

    <namespace>http://efive.ru/uitemplates</namespace>

    <tag>
        <tag-name>menu</tag-name>
        <description>Navigation menu component that aggregates tree-like structure of menu items.</description>
        <component>
            <component-type>ru.efive.uifaces.NavigationMenu</component-type>
        </component>

        <attribute>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                The component identifier for this component. This value must be unique within the closest parent
                component that is a naming container.
            </description>
        </attribute>
        <attribute>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Should this component be rendered.
            </description>
        </attribute>
        <attribute>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style(s) to be applied when this component is rendered.
            </description>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Space-separated list of CSS style class(es) to be applied in addition to standart calsses, defined by
                component themselve, when this element is rendered. This value must be passed through as the "class"
                attribute on generated markup.
            </description>
        </attribute>
    </tag>

    <tag>
        <tag-name>viewMenuItem</tag-name>
        <description>Single navigation menu item whick links to some facelet view</description>
        <component>
            <component-type>ru.efive.uifaces.FacesViewMenuItem</component-type>
            <renderer-type>ru.efive.uifaces.FacesViewMenuItem</renderer-type>
        </component>

        <attribute>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                The component identifier for this component. This value must be unique within the closest parent
                component that is a naming container.
            </description>
        </attribute>

        <attribute>
            <name>current</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Should be this menu item marked as currently selected.
            </description>
        </attribute>
        <attribute>
            <name>label</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Menu item text label.
            </description>
        </attribute>
        <attribute>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Should this component be rendered.
            </description>
        </attribute>
        <attribute>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style(s) to be applied when this component is rendered.
            </description>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Space-separated list of CSS style class(es) to be applied when this element is rendered. This value
                must be passed through as the "class" attribute on generated markup
            </description>
        </attribute>
        <attribute>
            <name>target</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Value of "target" attribute for generated "a" HTML element.
            </description>
        </attribute>
        <attribute>
            <name>value</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Value of "href" attribute for generated "a" HTML element.
            </description>
        </attribute>
        <attribute>
            <name>collapsable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Can this component be collapsed.
            </description>
        </attribute>
        <attribute>
            <name>collapsed</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Is this component collapsed.
            </description>
        </attribute>
    </tag>

    <tag>
        <tag-name>menuItem</tag-name>
        <description>Single navigation menu item wich can contain children menu items.</description>
        <component>
            <component-type>ru.efive.uifaces.NavigationMenuItem</component-type>
            <renderer-type>ru.efive.uifaces.NavigationMenuItem</renderer-type>
        </component>

        <attribute>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                The component identifier for this component. This value must be unique within the closest parent
                component that is a naming container.
            </description>
        </attribute>

        <attribute>
            <name>current</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Should be this menu item marked as currently selected.
            </description>
        </attribute>
        <attribute>
            <name>label</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Menu item text label.
            </description>
        </attribute>
        <attribute>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Should this component be rendered.
            </description>
        </attribute>
        <attribute>
            <name>selected</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Is the current menu item should be marked as selected menu item.
            </description>
        </attribute>
        <attribute>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style(s) to be applied when this component is rendered.
            </description>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Space-separated list of CSS style class(es) to be applied when this element is rendered. This value
                must be passed through as the "class" attribute on generated markup
            </description>
        </attribute>
        <attribute>
            <name>target</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Value of "target" attribute for generated "a" HTML element.
            </description>
        </attribute>
        <attribute>
            <name>value</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Value of "href" attribute for generated "a" HTML element.
            </description>
        </attribute>
        <attribute>
            <name>collapsable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Can this component be collapsed.
            </description>
        </attribute>
        <attribute>
            <name>collapsed</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Is this component collapsed.
            </description>
        </attribute>
    </tag>

    <tag>
        <tag-name>document</tag-name>
        <description></description>
        <component>
            <component-type>ru.efive.uifaces.DocumentContainer</component-type>
        </component>

        <attribute>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                The component identifier for this component. This value must be unique within the closest parent
                component that is a naming container.
            </description>
        </attribute>
        <attribute>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Should this component be rendered.
            </description>
        </attribute>
        <attribute>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style(s) to be applied when this component is rendered.
            </description>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Space-separated list of CSS style class(es) to be applied in addition to standart calsses, defined by
                component themselve, when this element is rendered. This value must be passed through as the "class"
                attribute on generated markup.
            </description>
        </attribute>

        <attribute>
            <name>canCreate</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Is the document could be created. Default value is true.
            </description>
        </attribute>
        <attribute>
            <name>canEdit</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Is the document could be edited. Default value is true.
            </description>
        </attribute>
        <attribute>
            <name>canView</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Is the document could be viewed. Default value is true.
            </description>
        </attribute>
        <attribute>
            <name>idParam</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Request parameter name indicating document identifier. Default value is "id".
            </description>
        </attribute>
        <attribute>
            <name>editParam</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Request parameter name indicating that document is in edit mode. Default value is "edit".
            </description>
        </attribute>
        <attribute>
            <name>editModeControl</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Defines a control type to switch document to the edit mode. Available values is "link" and "button".
                Default value is "link".
            </description>
        </attribute>
        <attribute>
            <name>editModeCaption</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Caption of control to switch document to the edit mode. Default value is "Edit".
            </description>
        </attribute>
        <attribute>
            <name>document</name>
            <required>true</required>
            <type>java.lang.Object</type>
            <description>
                Document.
            </description>
        </attribute>
    </tag>

    <tag>
        <tag-name>formPart</tag-name>
        <description>
            Part of data form. Component placed into form part are processed only if UICommand (for example
            commandButton or commandLink) that used to form submission contains no &lt;e5ui:formPartTarget ...&gt;
            or contains &lt;e5ui:formPartTarget ...&gt; with formPart attribute equals to id attribute of current
            formPart.
        </description>
        <component>
            <component-type>ru.efive.uifaces.FormPart</component-type>
        </component>

        <attribute>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                The component identifier for this component. This value must be unique within the closest parent
                component that is a naming container.
            </description>
        </attribute>
        <attribute>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Should this component be rendered.
            </description>
        </attribute>
    </tag>

    <tag>
        <tag-name>formPartTarget</tag-name>
        <description>
            Target form part which is should be validated.
            If UICommand component contains no formPartTarget child elements then all formParts will be processed.
            If UICommand component contains only one formPartTarget children element, no formParts will be processed
            (only components from form that are not in formPart's will be processed). Else component outside
            any formPart and given formParts will be processed at form submission.

            If rendered attribute is false, component is not considered (it is ignored).
        </description>
        <component>
            <component-type>ru.efive.uifaces.FormPartTarget</component-type>
        </component>

        <attribute>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                The component identifier for this component. This value must be unique within the closest parent
                component that is a naming container.
            </description>
        </attribute>
        <attribute>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Should this component be rendered.
            </description>
        </attribute>
        <attribute>
            <name>formPart</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Id of form part wich is should be validated on form sumbit.
            </description>
        </attribute>
    </tag>

    <tag>
        <tag-name>marker</tag-name>
        <description>
            Messages marker.
        </description>
        <component>
            <component-type>ru.efive.uifaces.Marker</component-type>
            <renderer-type>ru.efive.uifaces.Marker</renderer-type>
        </component>

        <attribute>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                The component identifier for this component. This value must be unique within the closest parent
                component that is a naming container.
            </description>
        </attribute>
        <attribute>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Should this component be rendered.
            </description>
        </attribute>
        <attribute>
            <name>for</name>
            <required>true</required>
            <type>java.lang.String</type>
            <description>
                Identifier of component messages belong to.
            </description>
        </attribute>
        <attribute>
            <name>infoStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style when there are info messages only.
            </description>
        </attribute>
        <attribute>
            <name>infoStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class when there are info messages only.
            </description>
        </attribute>
        <attribute>
            <name>warnStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style when there are warn messages.
            </description>
        </attribute>
        <attribute>
            <name>warnStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class when there are warn messages.
            </description>
        </attribute>
        <attribute>
            <name>errorStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style when there are error messages.
            </description>
        </attribute>
        <attribute>
            <name>errorStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class when there are error messages.
            </description>
        </attribute>
        <attribute>
            <name>fatalStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style when there are fatal messages.
            </description>
        </attribute>
        <attribute>
            <name>fatalStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class when there are fatal messages.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style of hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class of hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowInfoStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style of info messages on the hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowInfoStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class of info messages on the hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowWarnStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style of warn messages on the hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowWarnStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class of warn messages on the hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowErrorStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style of error messages on the hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowErrorStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class of error messages on the hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowFatalStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style of fatal messages on the hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowFatalStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class of fatal messages on the hint window.
            </description>
        </attribute>
    </tag>

    <tag>
        <tag-name>multiMarker</tag-name>
        <description>
            <![CDATA[Messages multi marker.]]>
        </description>
        <component>
            <component-type>ru.efive.uifaces.MultiMarker</component-type>
            <renderer-type>ru.efive.uifaces.MultiMarker</renderer-type>
        </component>

        <attribute>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                The component identifier for this component. This value must be unique within the closest parent
                component that is a naming container.
            </description>
        </attribute>
        <attribute>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                Should this component be rendered.
            </description>
        </attribute>
        <attribute>
            <name>for</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                Identifier of component messages belong to.
            </description>
        </attribute>
        <attribute>
            <name>displayMode</name>
            <required>false</required>
            <type>ru.efive.uifaces.component.html.HtmlMultiMarker.DisplayMode</type>
            <description>
                <![CDATA[Should this component be rendered as a hint, static div tag or a separate window.
                Possible values are "hint", "text", "window". Default is "hint".]]>
            </description>
        </attribute>
        <attribute>
            <name>infoStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style when there are info messages only.
            </description>
        </attribute>
        <attribute>
            <name>infoStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class when there are info messages only.
            </description>
        </attribute>
        <attribute>
            <name>warnStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style when there are warn messages.
            </description>
        </attribute>
        <attribute>
            <name>warnStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class when there are warn messages.
            </description>
        </attribute>
        <attribute>
            <name>errorStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style when there are error messages.
            </description>
        </attribute>
        <attribute>
            <name>errorStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class when there are error messages.
            </description>
        </attribute>
        <attribute>
            <name>fatalStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style when there are fatal messages.
            </description>
        </attribute>
        <attribute>
            <name>fatalStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class when there are fatal messages.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style of hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class of hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowInfoStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style of info messages on the hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowInfoStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class of info messages on the hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowWarnStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style of warn messages on the hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowWarnStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class of warn messages on the hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowErrorStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style of error messages on the hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowErrorStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class of error messages on the hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowFatalStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS style of fatal messages on the hint window.
            </description>
        </attribute>
        <attribute>
            <name>hintWindowFatalStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                CSS class of fatal messages on the hint window.
            </description>
        </attribute>
    </tag>

    <tag>
        <tag-name>dataTable</tag-name>
        <description></description>
        <component>
            <component-type>ru.efive.uifaces.DataTable</component-type>
            <renderer-type>ru.efive.uifaces.DataTable</renderer-type>
        </component>

        <attribute>
            <name>border</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>captionStyle</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>captionClass</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>cellpadding</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>cellspacing</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>grouping</name>
            <type>java.lang.Boolean</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>id</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>levelCount</name>
            <type>java.lang.Integer</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>value</name>
            <type>java.lang.Collection</type>
            <required>true</required>
            <description></description>
        </attribute>
        <attribute>
            <name>var</name>
            <type>java.lang.String</type>
            <required>true</required>
            <description></description>
        </attribute>
        <attribute>
            <name>width</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
    </tag>

    <tag>
        <tag-name>column</tag-name>
        <description></description>
        <component>
            <component-type>ru.efive.uifaces.DataTableColumn</component-type>
        </component>

        <attribute>
            <name>id</name>
            <type>java.lang.Integer</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>order</name>
            <type>java.lang.Object</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>rendered</name>
            <type>java.lang.Boolean</type>
            <required>false</required>
            <description></description>
        </attribute>

        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>headerStyle</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>headerClass</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>footerStyle</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>footerClass</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
    </tag>

    <tag>
        <tag-name>row</tag-name>
        <description></description>
        <component>
            <component-type>ru.efive.uifaces.DataTableRow</component-type>
        </component>

        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>fullRow</name>
            <type>java.lang.Boolean</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>group</name>
            <type>java.lang.Boolean</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>level</name>
            <type>java.lang.Integer</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>collapsed</name>
            <type>java.lang.Boolean</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>onkeydown</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>onkeypress</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>onkeyup</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
    </tag>

    <tag>
        <tag-name>tabPanel</tag-name>
        <description>
            <![CDATA[The component representing group of pages one of which can be selected at a time.]]>
        </description>
        <component>
            <component-type>ru.efive.uifaces.TabPanel</component-type>
            <renderer-type>ru.efive.uifaces.TabPanel</renderer-type>
        </component>

        <attribute>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                <![CDATA[The component identifier for this component. This value must be unique within the closest
                parent component that is a naming container.]]>
            </description>
        </attribute>
        <attribute>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                <![CDATA[Should this component be rendered.]]>
            </description>
        </attribute>
        <attribute>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                <![CDATA[CSS style(s) to be applied when this component is rendered.]]>
            </description>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                <![CDATA[Space-separated list of CSS style class(es) to be applied in addition to standart calsses,
                defined by component themselve, when this element is rendered. This value is passed through as
                the "class" attribute on generated markup.]]>
            </description>
        </attribute>
    </tag>

    <tag>
        <tag-name>tabPage</tag-name>
        <description>
            <![CDATA[The page for tabPanel component.]]>
        </description>
        <component>
            <component-type>ru.efive.uifaces.TabPage</component-type>
            <renderer-type>ru.efive.uifaces.TabPanel</renderer-type>
        </component>

        <attribute>
            <description>
                <![CDATA[MethodExpression representing the application action to invoke
                when this component is selected by the user. The expression
                must evaluate to a public method with the following signature:<br>
                java.lang.Object action()
                The toString() method of result is called to derive the logical outcome.]]>
            </description>
            <name>action</name>
            <required>false</required>
            <method-signature>java.lang.Object action()</method-signature>
        </attribute>
        <attribute>
            <description>
                <![CDATA[MethodExpression representing an action listener method that
                will be notified when this component is selected by the user.
                The expression must evaluate to a public method with the following signature:<br>
                void actionListener(javax.faces.event.ActionEvent)]]>
            </description>
            <name>actionListener</name>
            <required>false</required>
            <method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
        </attribute>
        <attribute>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                <![CDATA[The component identifier for this component. This value must be unique within the closest
                parent component that is a naming container.]]>
            </description>
        </attribute>
        <attribute>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                <![CDATA[Should this component be rendered.]]>
            </description>
        </attribute>
        <attribute>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                <![CDATA[CSS style(s) to be applied when this component is rendered.]]>
            </description>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                <![CDATA[Space-separated list of CSS style class(es) to be applied in addition to standart calsses,
                defined by component themselve, when this element is rendered. This value is passed through as
                the "class" attribute on generated markup.]]>
            </description>
        </attribute>
        <attribute>
            <name>headerText</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                <![CDATA[Text to be rendered in header of this page instead of 'header' facet's content if facet
                isn't defined.]]>
            </description>
        </attribute>
        <attribute>
            <name>selected</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                <![CDATA[Determines if this page is selected. Only the first page defined as selected
                will be rendered as selected in a tabPanel component. If there are no pages defined as selected
                the first page becomes selected.]]>
            </description>
        </attribute>
        <attribute>
            <name>actionBehavior</name>
            <required>false</required>
            <type>ru.efive.uifaces.component.html.HtmlTabPage.ActionBehavior</type>
            <description>
                <![CDATA[Determines the component behavior when it is selected.]]>
            </description>
        </attribute>
        <attribute>
            <name>disabled</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                <![CDATA[Determines if this page can be selected. If true then page cann't be selected
                otherwise it can. Default value is false.]]>
            </description>
        </attribute>
    </tag>

    <tag>
        <tag-name>fileUpload</tag-name>
        <description>
            <![CDATA[Component for uploading files.]]>
        </description>
        <component>
            <component-type>ru.efive.uifaces.FileUpload</component-type>
            <renderer-type>ru.efive.uifaces.FileUpload</renderer-type>
        </component>

        <attribute>
            <description>
                <![CDATA[MethodExpression representing the application action to invoke
                when this component is selected by the user. The expression
                must evaluate to a public method with the following signature:<br>
                java.lang.Object action()
                The toString() method of result is called to derive the logical outcome.
                The action will be invoked only when actionBehavior is "separate" and component includes
                <f:ajax> tag with specified id of the component in execute list. By default execute = "@this"
                which means id of current component.]]>
            </description>
            <name>action</name>
            <required>false</required>
            <method-signature>java.lang.Object action()</method-signature>
        </attribute>
        <attribute>
            <description>
                <![CDATA[MethodExpression representing an action listener method that
                will be notified when this component is selected by the user.
                The expression must evaluate to a public method with the following signature:<br>
                void actionListener(javax.faces.event.ActionEvent)]]>
            </description>
            <name>actionListener</name>
            <required>false</required>
            <method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
        </attribute>
        <attribute>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                <![CDATA[The component identifier for this component. This value must be unique within the closest
                parent component that is a naming container.]]>
            </description>
        </attribute>
        <attribute>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                <![CDATA[Should this component be rendered.]]>
            </description>
        </attribute>
        <attribute>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                <![CDATA[CSS style(s) to be applied when this component is rendered.]]>
            </description>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
            <description>
                <![CDATA[Space-separated list of CSS style class(es) to be applied in addition to standart calsses,
                defined by component themselve, when this element is rendered. This value is passed through as
                the "class" attribute on generated markup.]]>
            </description>
        </attribute>
        <attribute>
            <name>uploadHandler</name>
            <required>false</required>
            <type>ru.efive.uifaces.filter.UploadHandler</type>
            <description>
                <![CDATA[Defines handler of uploading selected files.]]>
            </description>
        </attribute>
        <attribute>
            <name>multiple</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
            <description>
                <![CDATA[Determines if user can select one or more files to upload. Default value is false.]]>
            </description>
        </attribute>
        <attribute>
            <name>maxFilesCount</name>
            <required>false</required>
            <type>java.lang.Integer</type>
            <description>
                <![CDATA[Determines maximum count of file than can be selected in multiple upload mode. 
                Zero value means unlimited count.]]>
            </description>
        </attribute>
        <attribute>
            <name>actionBehavior</name>
            <required>false</required>
            <type>ru.efive.uifaces.component.html.FileUpload.ActionBehavior</type>
            <description>
                <![CDATA[Determines the component behavior for uploading of files. 
                Possible values are "form" and "separate". Default is "form".
                The enclosing form's enctype should be equal to "multipart/form-data" when actionBehavior is "form".]]>
            </description>
        </attribute>
        <attribute>
            <name>onuploading</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description>
                <![CDATA[Determines the client-side event handler for event of start of uploading.
                Invoked only if actionBehavior="separate".]]>
            </description>
        </attribute>
        <attribute>
            <name>onuploaded</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description>
                <![CDATA[Determines the client-side event handler for event of completeness of uploading.
                Invoked only if actionBehavior="separate".]]>
            </description>
        </attribute>
    </tag>

    <tag>
        <tag-name>dynaDataTable</tag-name>
        <description></description>
        <component>
            <component-type>ru.efive.uifaces.DynaDataTable</component-type>
            <renderer-type>ru.efive.uifaces.DynaDataTable</renderer-type>
        </component>

        <attribute>
            <name>border</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>captionStyle</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>captionClass</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>cellpadding</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>cellspacing</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>id</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>value</name>
            <type>java.lang.Collection</type>
            <required>true</required>
            <description></description>
        </attribute>
        <attribute>
            <name>var</name>
            <type>java.lang.String</type>
            <required>true</required>
            <description></description>
        </attribute>
        <attribute>
            <name>width</name>
            <type>java.lang.String</type>
            <required>false</required>
            <description></description>
        </attribute>
        <attribute>
            <name>bean</name>
            <type>ru.efive.uifaces.bean.AbstractDocumentListHolderBean</type>
            <required>true</required>
            <description></description>
        </attribute>
        <attribute>
            <name>pageSize</name>
            <type>java.lang.Integer</type>
            <required>false</required>
            <description></description>
        </attribute>
    </tag>

    <tag>
        <tag-name>calendarPlan</tag-name>
        <description></description>
        <component>
            <component-type>ru.efive.uifaces.CalendarPlan</component-type>
            <renderer-type>ru.efive.uifaces.CalendarPlan</renderer-type>
        </component>

        <attribute>
            <name>holder</name>
            <type>ru.efive.uifaces.bean.calendarPlan.CalendarPlanHolder</type>
            <required>true</required>
            <description></description>
        </attribute>
    </tag>

    <tag>
        <tag-name>include</tag-name>
        <description></description>
        <handler-class>ru.efive.uifaces.component.html.Include</handler-class>
        <attribute>
            <name>src</name>
            <type>java.lang.String</type>
            <description></description>
        </attribute>
        <attribute>
            <name>url</name>
            <type>java.net.URL</type>
            <description></description>
        </attribute>
        <attribute>
            <name>data</name>
            <type>java.lang.Object</type>
            <description></description>
        </attribute>
    </tag>
</facelet-taglib>
